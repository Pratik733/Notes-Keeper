{"version":3,"sources":["firebase.js","modals/CreateTask.js","modals/EditTask.js","components/Card.js","components/Pagination.js","components/TodoList.js","App.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","CreateTaskPopup","modal","toggle","save","useState","title","setTitle","tagLine","setTagLine","body","setBody","NotesCollectionRef","collection","today","Date","handleChange","e","target","name","value","handleSave","a","preventDefault","toast","error","addDoc","tagline","datetime","isPinned","Modal","isOpen","position","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","EditTaskPopup","taskdata","reload","notifyEdit","notifyEditErr","handleUpdate","noteDoc","doc","id","updateDoc","Card","taskObj","index","setModal","colors","primaryColor","secondaryColor","handleDelete","deldoc","deleteDoc","icon","togglePin","pindoc","class","style","EditTask","PaginatedItems","itemsPerPage","items","saveTask","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","Items","map","obj","useEffect","endOffset","console","log","slice","Math","ceil","length","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","containerClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","TodoList","fnotes","setFNotes","loading","setLoading","q","query","orderBy","getDocs","data","docs","err","getNotes","success","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","window","location","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","CreateTask","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4426ab3.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCT31eEh0TSCn7vltcRaIlETZiHcg6tUyI\",\r\n  authDomain: \"note-keeper-733.firebaseapp.com\",\r\n  projectId: \"note-keeper-733\",\r\n  storageBucket: \"note-keeper-733.appspot.com\",\r\n  messagingSenderId: \"818388747663\",\r\n  appId: \"1:818388747663:web:791e94203b841edab5f7fa\",\r\n  measurementId: \"G-QKQYD61JG0\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore();","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { db } from \"../firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport toast, { Toaster } from 'react-hot-toast';\n\n\nconst CreateTaskPopup = ({ modal, toggle, save}) => {\n    const [title, setTitle] = useState('');\n    const [tagLine, setTagLine] = useState('');\n    const [body, setBody] = useState('');\n    const NotesCollectionRef = collection(db, \"Notes\");\n    var today = new Date();\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        if (name === \"taskName\") {\n            setTitle(value)\n        } else if (name === \"tagLine\") {\n            setTagLine(value)\n        } else {\n            setBody(value)\n        }\n    }\n\n    const notify = () => toast.error(\"Fill all the fields\");\n\n    const handleSave = async (e) => {\n        e.preventDefault()\n        if (!title || !tagLine || !body) {\n            notify();\n        }\n        else {\n            await addDoc(NotesCollectionRef, { title: title, tagline: tagLine, body: body, datetime: today, isPinned: false });\n            save();\n            setTitle(\"\");\n            setTagLine('');\n            setBody(\"\");\n        }\n    }\n\n\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <Toaster position=\"top-right\" />\n            <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n            <ModalBody>\n                <div className=\"form-group\">\n                    <label>Title</label>\n                    <input type=\"text\" className=\"form-control\" value={title} onChange={handleChange} name=\"taskName\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Tag Line</label>\n                    <input type=\"text\" className=\"form-control\" value={tagLine} onChange={handleChange} name=\"tagLine\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Text</label>\n                    <textarea rows=\"5\" className=\"form-control\" value={body} onChange={handleChange} name=\"body\"></textarea>\n                </div>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default CreateTaskPopup;","import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { updateDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\n\nconst EditTaskPopup = ({ modal, toggle, taskdata, reload, notifyEdit, notifyEditErr }) => {\n    const [title, setTitle] = useState(taskdata.title);\n    const [tagLine, setTagLine] = useState(taskdata.tagline);\n    const [body, setBody] = useState(taskdata.body);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        if (name === \"taskName\") {\n            setTitle(value)\n        } else if (name === \"tagLine\") {\n            setTagLine(value)\n        } else {\n            setBody(value)\n        }\n    }\n\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n        if (!title || !tagLine || !body) {\n            notifyEditErr();\n        }\n        else {\n            const noteDoc = doc(db, \"Notes\", taskdata.id)\n            await updateDoc(noteDoc, { title: title, tagline: tagLine, body: body });\n            toggle();\n            reload();\n            notifyEdit();\n        }\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Create Task</ModalHeader>\n            <ModalBody>\n                <div className=\"form-group\">\n                    <label>Title</label>\n                    <input type=\"text\" className=\"form-control\" value={title} onChange={handleChange} name=\"taskName\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Tag Line</label>\n                    <input type=\"text\" className=\"form-control\" value={tagLine} onChange={handleChange} name=\"tagLine\" />\n                </div>\n                <div className=\"form-group\">\n                    <label>Text</label>\n                    <textarea rows=\"5\" className=\"form-control\" value={body} onChange={handleChange} name=\"body\"></textarea>\n                </div>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n    );\n};\n\nexport default EditTaskPopup;","import React, { useState } from 'react';\nimport EditTask from '../modals/EditTask'\nimport { deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport toast from \"react-hot-toast\";\n\nconst Card = ({ taskObj, index, save, reload }) => {\n    const [modal, setModal] = useState(false);\n    const notifyDel = () => toast('Note Deleted Successfully!', {\n        icon: '🗑️',\n    });\n    const notifyEditErr = () => toast.error(\"Fill all the Fields\");\n\n    const notifyEdit = () => toast('Note Edited Successfully!', {\n        icon: '📝',\n    });\n    const notifyPin = () => toast('Note Pinned Successfully!', {\n        icon: '📌',\n    });\n    const notifyUnPin = () => toast('Note Unpinned Successfully!', {\n        icon: '❌',\n    });\n\n    const colors = [\n        {\n            primaryColor: \"#5D93E1\",\n            secondaryColor: \"#ECF3FC\"\n        },\n        {\n            primaryColor: \"#F9D288\",\n            secondaryColor: \"#FEFAF1\"\n        },\n        {\n            primaryColor: \"#5DC250\",\n            secondaryColor: \"#F2FAF1\"\n        },\n        {\n            primaryColor: \"#F48687\",\n            secondaryColor: \"#FDF1F1\"\n        },\n        {\n            primaryColor: \"#B964F7\",\n            secondaryColor: \"#F3F0FD\"\n        }\n    ]\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n\n    const handleDelete = async () => {\n        const deldoc = doc(db, \"Notes\", taskObj.id);\n        await deleteDoc(deldoc);\n        notifyDel();\n        reload();\n    }\n\n    const togglePin = async () => {\n        const pindoc = doc(db, \"Notes\", taskObj.id);\n        await updateDoc(pindoc, { isPinned: !taskObj.isPinned });\n        reload();\n        if (!taskObj.isPinned) {\n            notifyPin();\n        } else {\n            notifyUnPin();\n        }\n    }\n\n\n    return (\n        <div class=\"card-wrapper mx-4 my-4\">\n            <div class=\"card-top\" style={{ \"background-color\": colors[index % 5].primaryColor }}></div>\n            <div class=\"task-holder\">\n                <span class=\"card-header \" style={{ \"background-color\": colors[index % 5].secondaryColor, \"border-radius\": \"10px\" }}>{taskObj.title}</span>\n                <p className=\"mt-3\"><span style={{ \"fontWeight\": \"600\" }}>Tag Line:</span> {\" \"}{taskObj.tagline}</p>\n                <p className=\"overflow-auto scrollbar scrollbar-pink bordered-pink thin mb-4\" style={{\"--scroller\":colors[index % 5].primaryColor}}>{taskObj.body}</p>\n                <div style={{ \"position\": \"absolute\", \"right\": \"20px\", \"bottom\": \"10px\" }}>\n                    <i className={`fa ${taskObj.isPinned ? \"fa-bookmark\" : \"fa-bookmark-o\"} mr-3`} style={{ \"color\": colors[index % 5].primaryColor, \"cursor\": \"pointer\" }} onClick={togglePin}></i>\n                    <i className=\"far fa-edit mr-3\" style={{ \"color\": colors[index % 5].primaryColor, \"cursor\": \"pointer\" }} onClick={() => setModal(true)}></i>\n                    <i className=\"fas fa-trash-alt\" style={{ \"color\": colors[index % 5].primaryColor, \"cursor\": \"pointer\" }} onClick={handleDelete}></i>\n                </div>\n            </div>\n            <EditTask modal={modal} toggle={toggle} taskdata={taskObj} reload={reload} notifyEdit={notifyEdit} notifyEditErr={notifyEditErr}/>\n        </div>\n    );\n};\n\nexport default Card;","import React, { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Card from \"./Card\";\r\n\r\nfunction PaginatedItems({ itemsPerPage, items, saveTask, reload }) {\r\n  const [currentItems, setCurrentItems] = useState([]);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    setCurrentItems(items.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(items.length / itemsPerPage));\r\n  }, [itemOffset, itemsPerPage, items]);\r\n\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % items.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  console.log(\"this\", currentItems)\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((obj, index) => (\r\n            <Card taskObj={obj} index={index} save={saveTask} reload={reload} />\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <Items currentItems={currentItems} />\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< prev\"\r\n        renderOnZeroPageCount={null}\r\n        containerClassName=\"pagination\"\r\n        pageLinkClassName=\"page-num\"\r\n        previousLinkClassName=\"page-num\"\r\n        nextLinkClassName=\"page-num\"\r\n        activeLinkClassName=\"active\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaginatedItems;\r\n","import React, { useEffect, useState } from \"react\";\nimport CreateTask from \"../modals/CreateTask\";\nimport { db } from \"../firebase\";\nimport {\n  collection,\n  getDocs,\n  orderBy,\n  query,\n} from \"firebase/firestore\";\nimport PaginatedItems from \"./Pagination\";\nimport { ColorRing } from \"react-loader-spinner\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nconst TodoList = () => {\n  const [modal, setModal] = useState(false);\n  const [fnotes, setFNotes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const NotesCollectionRef = collection(db, \"Notes\");\n\n  const notifySave = () => toast.success(\"Note Saved Successfully\");\n  const notifyfetch = () => toast.error(\"Unable to fetch Notes\");\n\n  const q = query(\n    NotesCollectionRef,\n    orderBy(\"isPinned\", \"desc\"),\n    orderBy(\"datetime\")\n  );\n\n  useEffect(() => {\n    const getNotes = async () => {\n      setLoading(true);\n      const data = await getDocs(q);\n      try {\n        setFNotes(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n      }\n      catch (err) {\n        notifyfetch();\n      }\n      setLoading(false);\n    };\n    getNotes();\n  }, []);\n\n  const saveTask = async () => {\n    setModal(false);\n    console.log(\"save\");\n    const data = await getDocs(q);\n    setFNotes(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n    notifySave();\n  };\n\n  const reload = async () => {\n    setModal(false);\n    console.log(\"save\");\n    const data = await getDocs(q);\n    setFNotes(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  };\n\n  const toggle = () => {\n    setModal(!modal);\n  };\n\n\n  return (\n    <>\n      <Toaster position=\"top-right\" />\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <button\n          class=\"btn btn-outline-light my-2 my-sm-0 navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarTogglerDemo03\"\n          aria-controls=\"navbarTogglerDemo03\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n          onClick={() => setModal(true)}\n        >\n          Add Note\n        </button>\n        <a class=\"navbar-brand\" href=\"\" onClick={() => window.location.reload()}>\n          Note Keeper\n        </a>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo03\">\n          <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\"></ul>\n          <button\n            class=\"btn btn-outline-light my-2 my-sm-0\"\n            onClick={() => setModal(true)}\n          >\n            Add Note\n          </button>\n        </div>\n      </nav>\n\n      <div className=\"task-container\">\n        {loading ? (\n          <ColorRing\n            visible={true}\n            height=\"60vh\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={[\"#b8c480\", \"#B2A3B5\", \"#F4442E\", \"#51E5FF\", \"#429EA6\"]}\n          />\n        ) : (\n          <PaginatedItems items={fnotes} itemsPerPage={6} saveTask={saveTask} reload={reload} />\n        )}\n      </div>\n      <CreateTask toggle={toggle} modal={modal} save={saveTask} data={fnotes} reload={reload} />\n    </>\n  );\n};\n\nexport default TodoList;\n","import './App.css';\nimport TodoList from './components/TodoList'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}